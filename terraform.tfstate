{
  "version": 4,
  "terraform_version": "1.0.1",
  "serial": 295,
  "lineage": "1f76c822-6a30-4faa-ca25-6443580a4bf5",
  "outputs": {
    "ssm_output_bucket_name": {
      "value": "mistnet-ssm-output-bucket",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "ssm_output",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acceleration_status": "",
            "acl": "private",
            "arn": "arn:aws:s3:::mistnet-ssm-output-bucket",
            "bucket": "mistnet-ssm-output-bucket",
            "bucket_domain_name": "mistnet-ssm-output-bucket.s3.amazonaws.com",
            "bucket_prefix": null,
            "bucket_regional_domain_name": "mistnet-ssm-output-bucket.s3.ap-south-1.amazonaws.com",
            "cors_rule": [],
            "force_destroy": true,
            "grant": [],
            "hosted_zone_id": "Z11RGJOFQNVJUP",
            "id": "mistnet-ssm-output-bucket",
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "policy": null,
            "region": "ap-south-1",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [],
            "tags": {
              "Environment": "Test",
              "Name": "ssm-output-bucket"
            },
            "tags_all": {
              "Environment": "Test",
              "Name": "ssm-output-bucket"
            },
            "versioning": [
              {
                "enabled": false,
                "mfa_delete": false
              }
            ],
            "website": [],
            "website_domain": null,
            "website_endpoint": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_ssm_association",
      "name": "association_1",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "apply_only_at_cron_interval": false,
            "association_id": "5e9043ec-0ece-435f-954b-778efdd1564b",
            "association_name": "",
            "automation_target_parameter_name": "",
            "compliance_severity": "",
            "document_version": "$DEFAULT",
            "id": "5e9043ec-0ece-435f-954b-778efdd1564b",
            "instance_id": "",
            "max_concurrency": "",
            "max_errors": "",
            "name": "mistnet_ssm_document",
            "output_location": [
              {
                "s3_bucket_name": "mistnet-ssm-output-bucket",
                "s3_key_prefix": ""
              }
            ],
            "parameters": {},
            "schedule_expression": "",
            "targets": [
              {
                "key": "InstanceIds",
                "values": [
                  "i-0648a37f8f3ac7465"
                ]
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_ssm_document.document_1"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_ssm_document",
      "name": "document_1",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ssm:ap-south-1:473517452027:document/mistnet_ssm_document",
            "attachments_source": [],
            "content": "    {\n        \"schemaVersion\": \"2.2\",\n        \"description\": \"Run Ansible playbook using AWS SSM\",\n        \"parameters\": {\n            \"Check\": {\n                \"allowedValues\": [\n                    \"True\",\n                    \"False\"\n                ],\n                \"default\": \"False\",\n                \"description\": \"(Optional) Use this parameter to run a check of the Ansible execution.\",\n                \"type\": \"String\"\n            },\n            \"ExtraVariables\": {\n                \"allowedPattern\": \"^((^|\\\\s)\\\\w+=(\\\\S+|'.*'))*$\",\n                \"default\": \"SSM=True\",\n                \"description\": \"(Optional) Additional variables to pass to Ansible at runtime. Enter key/value pairs separated by a space. For example: color=red flavor=cherry\",\n                \"displayType\": \"textarea\",\n                \"type\":  \"String\"\n            },\n            \"InstallDependencies\": {\n                \"allowedValues\": [\n                    \"True\",\n                    \"False\"\n                ],\n                \"default\":  \"True\",\n                \"description\": \"(Required) If set to True, Systems Manager installs Ansible and its dependencies, including Python, from the PyPI repo. If set to False, then verify that Ansible and its dependencies are installed on the target instances. If they aren’t, the SSM document fails to run.\",\n                \"type\": \"String\"\n            },\n            \"PlaybookFile\": {\n                \"allowedPattern\": \"[(a-z_A-Z0-9\\\\-\\\\.)/]+(.yml|.yaml)$\",\n                \"default\": \"test-playbook.yml\",\n                \"description\": \"(Optional) The Playbook file to run (including relative path). If the main Playbook file is located in the ./automation directory, then specify automation/playbook.yml.\",\n                \"type\":  \"String\"\n            },\n            \"SourceInfo\": {\n                \"default\": {\"owner\":\"Muk007\",\"repository\":\"playbook\",\"path\":\"level_1\",\"getOptions\":\"branch:master\"},\n                \"description\": \"(Optional) Specify the information required to access the resource from the specified source type. If source type is GitHub, then you can specify any of the following: 'owner', 'repository', 'path', 'getOptions', 'tokenInfo'. Example GitHub parameters: {\\\"owner\\\":\\\"awslabs\\\",\\\"repository\\\":\\\"amazon-ssm\\\",\\\"path\\\":\\\"Compliance/InSpec/PortCheck\\\",\\\"getOptions\\\":\\\"branch:master\\\"}. If source type is S3, then you can specify 'path'. Important: If you specify S3, then the IAM instance profile on your managed instances must be configured with read access to Amazon S3.\",\n                \"displayType\": \"textarea\",\n                \"type\": \"StringMap\"\n            },\n            \"SourceType\": {\n                \"allowedValues\": [\n                    \"GitHub\",\n                    \"S3\"\n                ],\n                \"description\": \"(Optional) Specify the source type.\",\n                \"type\": \"String\",\n                \"default\": \"GitHub\"\n            },\n            \"TimeoutSeconds\": {\n                \"default\": \"3600\",\n                \"description\": \"(Optional) The time in seconds for a command to be completed before it is considered to have failed.\",\n                \"type\": \"String\"\n            },\n            \"Verbose\": {\n                \"allowedValues\": [\n                    \"-v\",\n                    \"-vv\",\n                    \"-vvv\",\n                    \"-vvvv\"\n                ],\n                \"default\": \"-v\",\n                \"description\": \"(Optional) Set the verbosity level for logging Playbook executions. Specify -v for low verbosity, -vv or –vvv for medium verbosity, and -vvvv for debug level.\",\n                \"type\": \"String\"\n            }\n        },\n        \"mainSteps\": [\n            {\n                \"action\": \"aws:downloadContent\",\n                \"inputs\": {\n                    \"SourceInfo\": \"{{ SourceInfo }}\",\n                    \"SourceType\": \"{{ SourceType }}\"\n                },\n                \"name\": \"downloadContent\"\n            },\n            {\n                \"action\": \"aws:runShellScript\",\n                \"inputs\": {\n                    \"runCommand\": [\n                        \"#!/bin/bash\",\n                        \"if  [[ \\\"{{InstallDependencies}}\\\" == True ]] ; then\",\n                        \"   echo \\\"Installing and or updating required tools: Ansible, wget unzip ....\\\" \u003e\u00262\",\n                        \"   if [ -f  \\\"/etc/system-release\\\" ] ; then\",\n                        \"     if cat /etc/system-release|grep -i 'Amazon Linux release 2' ; then \",\n                        \"       sudo yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\",\n                        \"       sudo yum install -y ansible\",\n                        \"       sudo yum -y install unzip\",\n                        \"     elif cat /etc/system-release|grep -i 'Amazon Linux AMI' ; then \",\n                        \"       sudo pip install ansible --upgrade\",           \n                        \"       sudo yum -y install unzip\",\n                        \"     elif cat /etc/system-release|grep -i 'Red Hat Enterprise Linux' ; then \",\n                        \"       sudo yum -y install python3-pip\",\n                        \"       sudo pip3 install ansible\",\n                        \"       sudo yum -y install unzip\",\n                        \"     else\",\n                        \"       echo \\\"There was a problem installing or updating the required tools for the document. You can review the log files to help you correct the problem.\\\" \u003e\u00262\",\n                        \"       exit 1\",\n                        \"     fi\",\n                        \"   elif cat /etc/issue|grep -i Ubuntu ; then \",\n                        \"     UBUNTU_VERSION=$(cat /etc/issue | grep -i ubuntu | awk '{print $2}' |  awk -F'.' '{print $1}')\",\n                        \"     sudo apt-get update\",\n                        \"     if [ $(($UBUNTU_VERSION \u003e 18)) == 1 ]; then\",\n                        \"       sudo DEBIAN_FRONTEND=noninteractive apt-get install python3-pip -y\",\n                        \"       sudo pip3 install ansible --upgrade\",\n                        \"     else\",\n                        \"       sudo DEBIAN_FRONTEND=noninteractive apt-get install python-pip -y\",\n                        \"       sudo pip install ansible --upgrade\",\n                        \"     fi\",\n                        \"     sudo DEBIAN_FRONTEND=noninteractive apt-get install unzip -y\",\n                        \"   else\",\n                        \"     echo \\\"There was a problem installing or updating the required tools for the document. You can review the log files to help you correct the problem.\\\" \u003e\u00262\",\n                        \"     exit 1\",\n                        \"   fi\",\n                        \"fi\",\n                        \"echo \\\"Running Ansible in `pwd`\\\"\",\n                        \"#this section locates files and unzips them\",\n                        \"for zip in $(find -iname '*.zip'); do\",\n                        \"  unzip -o $zip\",\n                        \"done\",\n                        \"#PlaybookFile=\\\"test-playbook.yml\\\"\",\n                        \"if [ ! -f  \\\"test-playbook.yml\\\" ] ; then\",\n                        \"   echo \\\"The specified Playbook file doesn't exist in the downloaded bundle. Please review the relative path and file name.\\\" \u003e\u00262\",\n                        \"   exit 2\",\n                        \"fi\",\n                        \"if  [[ \\\"{{Check}}\\\" == True ]] ; then\",\n                        \"   ansible-playbook -i \\\"localhost,\\\" --check -c local -e \\\"{{ExtraVariables}}\\\" \\\"{{Verbose}}\\\" \\\"test-playbook.yml\\\"\",\n                        \"else\",\n                        \"   ansible-playbook -i \\\"localhost,\\\" -c local -e \\\"{{ExtraVariables}}\\\" \\\"{{Verbose}}\\\" \\\"test-playbook.yml\\\"\",\n                        \"fi\"\n                    ],\n                    \"timeoutSeconds\": \"{{ TimeoutSeconds }}\"\n                },\n                \"name\": \"runShellScript\"\n            }\n        ]\n    }\n",
            "created_date": "2021-07-05T18:48:00Z",
            "default_version": "1",
            "description": "Run Ansible playbook using AWS SSM",
            "document_format": "JSON",
            "document_type": "Command",
            "document_version": "1",
            "hash": "58b04dc1e8b6b1760877685976f8d4651d3aefd4817e87dcb16300813db9a2c2",
            "hash_type": "Sha256",
            "id": "mistnet_ssm_document",
            "latest_version": "1",
            "name": "mistnet_ssm_document",
            "owner": "473517452027",
            "parameter": [
              {
                "default_value": "False",
                "description": "(Optional) Use this parameter to run a check of the Ansible execution.",
                "name": "Check",
                "type": "String"
              },
              {
                "default_value": "SSM=True",
                "description": "(Optional) Additional variables to pass to Ansible at runtime. Enter key/value pairs separated by a space. For example: color=red flavor=cherry",
                "name": "ExtraVariables",
                "type": "String"
              },
              {
                "default_value": "True",
                "description": "(Required) If set to True, Systems Manager installs Ansible and its dependencies, including Python, from the PyPI repo. If set to False, then verify that Ansible and its dependencies are installed on the target instances. If they aren’t, the SSM document fails to run.",
                "name": "InstallDependencies",
                "type": "String"
              },
              {
                "default_value": "test-playbook.yml",
                "description": "(Optional) The Playbook file to run (including relative path). If the main Playbook file is located in the ./automation directory, then specify automation/playbook.yml.",
                "name": "PlaybookFile",
                "type": "String"
              },
              {
                "default_value": "{\"owner\":\"Muk007\",\"repository\":\"playbook\",\"path\":\"level_1\",\"getOptions\":\"branch:master\"}",
                "description": "(Optional) Specify the information required to access the resource from the specified source type. If source type is GitHub, then you can specify any of the following: 'owner', 'repository', 'path', 'getOptions', 'tokenInfo'. Example GitHub parameters: {\"owner\":\"awslabs\",\"repository\":\"amazon-ssm\",\"path\":\"Compliance/InSpec/PortCheck\",\"getOptions\":\"branch:master\"}. If source type is S3, then you can specify 'path'. Important: If you specify S3, then the IAM instance profile on your managed instances must be configured with read access to Amazon S3.",
                "name": "SourceInfo",
                "type": "StringMap"
              },
              {
                "default_value": "GitHub",
                "description": "(Optional) Specify the source type.",
                "name": "SourceType",
                "type": "String"
              },
              {
                "default_value": "3600",
                "description": "(Optional) The time in seconds for a command to be completed before it is considered to have failed.",
                "name": "TimeoutSeconds",
                "type": "String"
              },
              {
                "default_value": "-v",
                "description": "(Optional) Set the verbosity level for logging Playbook executions. Specify -v for low verbosity, -vv or –vvv for medium verbosity, and -vvvv for debug level.",
                "name": "Verbose",
                "type": "String"
              }
            ],
            "permissions": null,
            "platform_types": [
              "Windows",
              "Linux"
            ],
            "schema_version": "2.2",
            "status": "Active",
            "tags": null,
            "tags_all": {},
            "target_type": "",
            "version_name": ""
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    }
  ]
}
